apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 13
        versionName "1.3.0"
        multiDexEnabled false
        manifestPlaceholders = [ UMENG_CHANNEL_VALUE:"default_channel" ]
        buildConfigField "boolean", "ISDEBUG", "true"
    }

    lintOptions {
        abortOnError false
    }

//签名
    signingConfigs {
        debug {
            //storeFile file("/home/sam/.android/debug.keystore")
        }

        //你自己的keystore信息
        release {
            storeFile file("/Users/sam/sangmingming.keystore")
            storePassword "ming1990"
            keyAlias "sam"
            keyPassword "ming1990"
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "ISDEBUG", "true"
        }

        release {
            buildConfigField "boolean", "ISDEBUG", "true"
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    //渠道Flavors，我这里写了一些常用的，你们自己改
    productFlavors {
        GooglePlay{}
        Store360{}
        //QQ{}
        //Taobao{}
        //WanDouJia{}
        //AnZhuo{}
        //AnZhi{}
        //BaiDu{}
        //Store163{}
        //GFeng{}
        //AppChina{}
        //EoeMarket{}
        //Store91{}
        //NDuo{}
        xiaomi {}
        umeng {}
        firIm{}
        PuGongYing {}

    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [ UMENG_CHANNEL_VALUE:name ]
    }

    applicationVariants.all { variant ->

        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

//tasks.withType() {
//    options.encoding = "UTF-8"
//}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.android.support:recyclerview-v7:21.+'
}
